###读取数据###
library(Seurat)
dir="/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE159677/outs/filtered_feature_bc_matrix/GSM4837528_01/"
list.files(dir)
counts <- Read10X(data.dir = dir)
class(counts)
scRNA28 <- CreateSeuratObject(counts = counts)
scRNA28

CA <- merge(scRNA23,y = c(scRNA24,scRNA25,scRNA26,scRNA27,scRNA28),
                 add.cell.ids = c("scRNA23","scRNA24","scRNA25","scRNA26","scRNA27","scRNA28"),
                 project = "CA",merge.data = TRUE)
CA$sample <- sapply(X = strsplit(colnames(CA), split = "_"), FUN = "[", 1)
dim(CA)
table(CA@meta.data$sample)
saveRDS(CA,"/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE159677/CA.rds")

setwd("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/scRNA/seurat/")
CA[["percent.mt"]] <- PercentageFeatureSet(CA, pattern = "^MT-")
CA$log10GenesPerUMI <- log10(CA$nFeature_RNA)/log10(CA$nCount_RNA)
CA <- subset(CA,subset = nFeature_RNA > 200&nFeature_RNA < 6000&percent.mt < 10&log10GenesPerUMI > 0.8)
pdf("fig1.pdf",width = 10,heigh = 10)
VlnPlot(CA, features = c("nFeature_RNA", "nCount_RNA", "percent.mt"), ncol = 3,group.by = "orig.ident")
dev.off()

pdf("fig2.pdf",width = 20,heigh = 10)
plot1 <- FeatureScatter(CA, feature1 = "nCount_RNA", feature2 = "percent.mt",group.by = "orig.ident")
plot2 <- FeatureScatter(CA, feature1 = "nCount_RNA", feature2 = "nFeature_RNA",group.by = "orig.ident")
plot1 + plot2
dev.off()

CA <- NormalizeData(CA, normalization.method = "LogNormalize", scale.factor = 10000)
CA <- FindVariableFeatures(CA, selection.method = "vst", nfeatures = 2000)
top10 <- head(VariableFeatures(CA), 10)
pdf("fig3.pdf",width = 20,heigh = 10)
plot3 <- VariableFeaturePlot(CA)
plot4 <- LabelPoints(plot = plot3, points = top10, repel = TRUE)
plot3 + plot4
dev.off()

all.genes <- rownames(CA)
CA <- ScaleData(CA, features = all.genes)
CA <- RunPCA(CA, features = VariableFeatures(object = CA))
pdf("fig4.pdf",width = 20,heigh = 10)
VizDimLoadings(CA, dims = 1:2, reduction = "pca")
dev.off()

pdf("fig5.pdf",width = 10,heigh = 10)
DimPlot(CA, reduction = "pca",group.by = "orig.ident")
dev.off()
pdf("fig6.pdf",width = 10,heigh = 10)
ElbowPlot(CA)
dev.off()

CA <- FindNeighbors(CA, dims = 1:30)
CA <- FindClusters(CA, resolution = 0.5)
head(Idents(CA), 5)

CA <- RunUMAP(CA, dims = 1:30)
pdf("fig7.pdf",width = 10,heigh = 10)
DimPlot(CA, reduction = "umap",label = TRUE, repel = TRUE)
dev.off()
   
pdf("fig8.pdf",width = 10,heigh = 10)
DimPlot(CA, reduction = "umap",group.by = "sample")
dev.off()
saveRDS(CA,"/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE159677/CA_filter.rds")

library(harmony)
CA <- RunHarmony(CA,reduction = "pca",group.by.vars = "sample",reduction.save = "harmony")
CA <- RunUMAP(CA, reduction = "harmony", dims = 1:30,reduction.name = "umap")
CA <- FindNeighbors(CA, reduction = "harmony", dims = 1:30)
CA <- FindClusters(CA, resolution = 0.1)
pdf("fig9.pdf",width = 20,heigh = 10)
plot5 <- DimPlot(CA, reduction = "umap",group.by = "sample", label = F,repel = TRUE)
plot6 <- DimPlot(CA, reduction = "umap", label = T,repel = TRUE)
plot5 + plot6
dev.off()
saveRDS(CA,"/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE159677/CA_filter_batch.rds")

CA_markers <- FindAllMarkers(CA, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.25)
library(dplyr)
top20 <- CA_markers %>% group_by(cluster) %>% top_n(n = 20, wt = avg_log2FC)
pdf("fig10.pdf",width = 10,heigh = 10)
DoHeatmap(CA, features = top20$gene) + NoLegend()
dev.off()
write.csv(CA_markers,"cluster_markers.csv")
write.csv(top20,"top20_marker.csv")

CA <- readRDS("/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE159677/CA_filter_batch.rds")
setwd("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/scRNA/seurat/")
new.cluster.ids <- c("T cell", "Endothelial cell","Smooth muscle cell", "Dendritic cell","Macrophage","Fibroblast","B cell","Natural killer cell","Granulocyte-monocyte progenitor","Granulocyte-monocyte progenitor")
names(new.cluster.ids) <- levels(CA)
CA <- RenameIdents(CA, new.cluster.ids)
pdf("fig11.pdf",width = 10,heigh = 10)
DimPlot(CA, reduction = "umap", label = TRUE)
dev.off()

marker_sign <- c('TPH1', 'MAOB', 'TDO2', 'KMO', 'KYNU','CYP1B1')
pdf("fig12.pdf",width = 10,heigh = 15)
FeaturePlot(CA,features = marker_sign)
dev.off()
saveRDS(CA, file = "CA.rds")
#小提琴图
library(ggplot2)
pdf("MAOB.pdf",width = 10,heigh = 10)
VlnPlot(CA, features = "MAOB")
dev.off()
#堆叠小提琴图，R原生函数实现StackedVlnPlot
library(patchwork)
library(ggplot2)
#封装函数
modify_vlnplot<- function(obj,
                          feature,
                          pt.size = 0,
                          plot.margin = unit(c(-0.75, 0, -0.75, 0), "cm"),
                          ...) {
  p<- VlnPlot(obj, features = feature, pt.size = pt.size, ... )  +
    xlab("") + ylab(feature) + ggtitle("") +
    theme(legend.position = "none",
          axis.text.x = element_blank(),
          axis.text.y = element_blank(),
          axis.ticks.x = element_blank(),
          axis.ticks.y = element_line(),
          axis.title.y = element_text(size = rel(1), angle = 0, vjust = 0.5),
          plot.margin = plot.margin )
  return(p)
}

## main function
StackedVlnPlot<- function(obj, features,
                          pt.size = 0,
                          plot.margin = unit(c(-0.75, 0, -0.75, 0), "cm"),
                          ...) {
  
  plot_list<- purrr::map(features, function(x) modify_vlnplot(obj = obj,feature = x, ...))
  plot_list[[length(plot_list)]]<- plot_list[[length(plot_list)]] +
    theme(axis.text.x=element_text(), axis.ticks.x = element_line())
  
  p<- patchwork::wrap_plots(plotlist = plot_list, ncol = 1)
  return(p)
}
#配色方案
my36colors <-c('#E5D2DD', '#53A85F', '#F1BB72', '#F3B1A0', '#D6E7A3', '#57C3F3', '#476D87',
               '#E95C59', '#E59CC4', '#AB3282', '#23452F', '#BD956A', '#8C549C', '#585658',
               '#9FA3A8', '#E0D4CA', '#5F3D69', '#C5DEBA', '#58A4C3', '#E4C755', '#F7F398',
               '#AA9A59', '#E63863', '#E39A35', '#C1E6F3', '#6778AE', '#91D0BE', '#B53E2B',
               '#712820', '#DCC1DD', '#CCE0F5',  '#CCC9E6', '#625D9E', '#68A180', '#3A6963',
               '#968175'
)
pdf("fig13.pdf",width = 10,heigh = 10)
StackedVlnPlot(CA, c('TPH1', 'MAOB', 'TDO2', 'KMO', 'KYNU','CYP1B1'), pt.size=0, cols=my36colors)
dev.off()

#CA与normal做每种细胞类型的差异
CA@meta.data$source <- ifelse(as.numeric(substr(CA@meta.data$sample, nchar(CA@meta.data$sample), nchar(CA@meta.data$sample))) %% 2 == 1, "CA", "PA")
CA$cell_type <- Idents(CA)
saveRDS(CA,"CA.rds")
scRNA <- subset(CA,cell_type == "Granulocyte-monocyte progenitor")#"T cell", "Endothelial cell","Smooth muscle cell", "Dendritic cell","Macrophage","Fibroblast","B cell","Natural killer cell","Granulocyte-monocyte progenitor"
diff_genes <- FindMarkers(scRNA, ident.1 = "CA", ident.2 = "PA", group.by = "source")
diff_genes1 <- subset(diff_genes, p_val_adj < 0.05&abs(avg_log2FC)>1)
dim(diff_genes1)
write.csv(diff_genes, "Granulocyte-monocyte progenitor_case_control_diff_genes.csv", row.names = T)
write.csv(diff_genes1, "Granulocyte-monocyte progenitor_case_control_diff_genes_filter_q0.05.csv", row.names = T)
###查看基因表达箱线图（在样本分组之间）###
