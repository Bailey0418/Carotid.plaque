###DEGs（limma）###
#查看数据一致性
setwd("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment")
exp <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/preprocessing/exp_symbol_avg.csv",row.names = 1)
pdf(file = "01.pdf", width = 6, height = 6)
boxplot(data.frame(exp))
dev.off()
#一致性不好的话使用limma标准化处理
library(limma)
normalized_exp <- normalizeBetweenArrays(exp, method="quantile")
pdf(file = "02.pdf", width = 6, height = 6)
boxplot(data.frame(normalized_exp))
dev.off()
write.csv(normalized_exp,file="/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE43292/preprocessing/exp_norm.csv")
###limma差异分析###
library(limma)
exp <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE43292/preprocessing/exp_norm.csv",row.names = 1)
# 提取样本名的最后一位数字
sample_names <- colnames(exp)
last_digit <- as.numeric(sub(".*([0-9])$", "\\1", sample_names))
# 创建分组向量：奇数为 normal 组，偶数为 case 组
group <- ifelse(last_digit %% 2 == 1, "normal", "case")
# 创建设计矩阵
design <- model.matrix(~0 + factor(group))
colnames(design) <- c("normal", "case")  # 显式命名组
print(head(design))
# 创建对比矩阵
contrast_matrix <- makeContrasts(
  case_vs_normal = case - normal,
  levels = design
)
print(contrast_matrix)
# 拟合线性模型
fit <- lmFit(exp, design)
# 应用对比
fit2 <- contrasts.fit(fit, contrast_matrix)
# 使用经验贝叶斯方法来计算显著性
fit2 <- eBayes(fit2)
result <- topTable(fit2,coef=1,n=Inf,adjust="BH")
head(result)
write.csv(result,"/mnt/raid5c/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/DEGs.csv")
library(dplyr)
log2FC_threshold <- 1
p_value_threshold <- 0.05
DEG <- result %>%
  filter(abs(logFC) > log2FC_threshold & P.Value < p_value_threshold)
dim(DEG)
write.csv(DEG,"/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/DEGs_filtered.csv")
###差异基因作图###
library(ggplot2)
library(dplyr)
library(ggrepel)
library(EnhancedVolcano)
DEG <- read.csv("DEGs.csv",row.names = 1)
colnames(DEG)[1] <- "log2FoldChange"
colnames(DEG)[5] <- "pvalue"
EnhancedVolcano(DEG,                
                lab = rownames(DEG),                
                x = 'log2FoldChange',                
                y = 'pvalue',
                xlim = c(-4, 3),
                ylim = c(0,6),
                pCutoff = 0.05,  
                FCcutoff = 0.75)
###GO+KEGG enrichment###
library(clusterProfiler)
library(org.Hs.eg.db)#将Symbol转换为基因符号Entrez ID
library(dplyr)
library(DOSE)
library(ggplot2)
library(GEOquery)#R包加载
library(tidyr)
setwd("D:/acv/240903颈动脉斑块/result")
DEG <- read.csv("DEGs_filtered_log2FC075.csv",row.names = 1)
diff_entrez<-bitr(rownames(DEG),fromType = 'SYMBOL',toType = 'ENTREZID',OrgDb = 'org.Hs.eg.db')
head(diff_entrez)
#KEGG enrich
KEGG_enrich <- clusterProfiler::enrichKEGG(gene = diff_entrez$ENTREZID,
                                           organism = "hsa", #物种Homo sapiens 
                                           pvalueCutoff = 0.05,#pvalue阈值
                                           qvalueCutoff = 0.05,#qvalue阈值
                                           pAdjustMethod = "BH",#p值矫正方法，one of "holm", 
                                           #"hochberg", "hommel", 
                                           #"bonferroni", "BH", 
                                           #"BY", "fdr", "none"
                                           minGSSize = 10,#富集分析中考虑的最小基因集合大小
                                           maxGSSize = 500)#富集中考虑的最大基因集合大小
#将RNTREZ转换为Symbol
KEGG_enrich<-setReadable(KEGG_enrich,
                         OrgDb = org.Hs.eg.db,
                         keyType = 'ENTREZID')
#提取KEGG富集结果表格                 
KEGG_result<-KEGG_enrich@result
KEGG_result
KEGG_result <- KEGG_result[which(KEGG_result$pvalue<0.05&KEGG_result$qvalue<0.05),]
write.csv(KEGG_result,"KEGG_result.csv")
#GO enrich
go_enrich<-clusterProfiler::enrichGO(gene = diff_entrez$ENTREZID,
                                     ont = 'all',#可选'BP','CC','MF' or 'all'
                                     keyType = "ENTREZID",
                                     OrgDb = org.Hs.eg.db,
                                     pAdjustMethod = "BH",#p值矫正方法
                                     pvalueCutoff = 0.05,
                                     qvalueCutoff = 0.05)
#将RNTREZ转换为Symbol
go_enrich<-DOSE::setReadable(go_enrich,
                             OrgDb = org.Hs.eg.db,
                             keyType = 'ENTREZID')
#去除冗余的GO term
go_geo<- simplify(go_enrich, cutoff=0.7, by="p.adjust",
                  select_fun=min)
#提取GO富集结果表格 
go_result<-go_geo@result
go_result
write.csv(go_result,"G0_result.csv")
###enrich结果绘图###
#GO结果作图
library(forcats)
library(ggplot2)
#筛选top5的通路并替换其中两个为自己想展示的氨基酸相关BP
go_result_with_rownames <- go_result %>% mutate(term = rownames(go_result))
top_go_result <- go_result_with_rownames %>%
  group_by(ONTOLOGY) %>%
  slice_max(order_by = GeneRatio, n = 5, with_ties = FALSE) %>%
  ungroup()
# 将 tibble 转换为 data.frame
top_go_result_df <- as.data.frame(top_go_result)
rownames(top_go_result_df) <- top_go_result_df$term
top_go_result_df$term <- NULL
# 查找 BP 行的位置
bp_rows <- which(top_go_result_df$ONTOLOGY == "BP")
# 替换前两个 BP 行
top_go_result_df[bp_rows[4:5], ] <- amino_acid_related
print(top_go_result_df)
ggplot(top_go_result_df,aes(x=GeneRatio,y=fct_reorder(Description, GeneRatio)))+#将term顺序按照GeneRatio进行排序
  #分面
  geom_point(aes(size=Count,fill=p.adjust),
             shape=21,
             color='black')+
  facet_grid(ONTOLOGY~.,
             scale='free_y',
             space = 'free_y'
  )+
  #修改气泡图颜色
  scale_fill_gradient(low='#E27371',high = '#5D82A7')+
  #标题修改
  labs(title='GO Enrichment',
       y='GO term',
       x='GeneRatio')+
  guides(fill=guide_colorbar(reverse = T,order=1))+
  theme_bw()#主题
#KEGG作图
top15_kegg <- KEGG_result %>%
  arrange(p.adjust) %>%  # 按调整后的p值升序排列
  slice(1:15)            # 选择前15个通路
top15_kegg[15, ] <- KEGG_result[35,]
print(top15_kegg)
ggplottop15_kegg,aes(x=GeneRatio,y=fct_reorder(Description, GeneRatio)))+#将term顺序按照GeneRatio进行排序
  #分面
  geom_point(aes(size=Count,fill=p.adjust),
             shape=21,
             color='black')+
  #修改气泡图颜色
  scale_fill_gradient(low='#E27371',high = '#5D82A7')+
  #标题修改
  labs(title='KEGG Enrichment',
       y='KEGG term',
       x='GeneRatio')+
  guides(fill=guide_colorbar(reverse = T,order=1))+
  theme_bw()#主题
###绘制venn图###
cd /mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment
library (VennDiagram)
set1 <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/DEGs_filtered.csv")
set2 <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/signature_gene_set.csv")
set1 <- set1$X
set2 <- set2$Gene
intersection <- intersect(set1, set2)
print(intersection)
write.csv(intersection, file = "/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/intersection_genes.csv")
#二元#
venn.diagram(x=list(set1,set2), 
             scaled = F, # 根据比例显示大小
             alpha= 0.5, #透明度 
             lwd=1,lty=1,col=c('#FFFFCC','#CCFFFF'), #圆圈线条粗细、形状、颜色；1 实线, 2 虚线, blank无线条 
             label.col ='black' , # 数字颜色abel.col=c('#FFFFCC','#CCFFFF',......)根据不同颜色显示数值颜色 
             cex = 2, # 数字大小 
             fontface = "bold",  # 字体粗细；加粗bold 
             fill=c('#FFFFCC','#CCFFFF'), # 填充色 配色https://www.58pic.com/ 
             category.names = c("Set1", "Set2") , #标签名 
             cat.dist = 0.02, # 标签距离圆圈的远近 
             cat.pos = -180, # 标签相对于圆圈的角度cat.pos = c(-10, 10, 135) 
             cat.cex = 2, #标签字体大小 
             cat.fontface = "bold",  # 标签字体加粗
             cat.col='black' ,   #cat.col=c('#FFFFCC','#CCFFFF',.....)根据相应颜色改变标签颜色
             cat.default.pos = "outer",  # 标签位置, outer内;text 外 
             output=TRUE, 
             filename='/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/venn.png',# 文件保存 
             imagetype="png",  # 类型（tiff png svg）
             resolution = 400,  # 分辨率 
             compression = "lzw"# 压缩算法
             )
#关键基因表达箱线图
data1 <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE43292/preprocessing/exp_norm.csv",row.names = 1)
intersection <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/bulk/Tryptophan/intersect/intersection_genes.csv",row.names = 1)
data <- data1[intersection$x,]
head(data)
sample_names <- colnames(data)
# 提取样本名的最后一位
last_digits <- as.numeric(substr(sample_names, nchar(sample_names), nchar(sample_names)))
# 判断奇偶数，奇数为 normal (0)，偶数为 case (1)
labels <- ifelse(last_digits %% 2 == 0, 1, 0)  # 偶数为 case (1), 奇数为 normal (0)
data_t <- t(data)
# 转换为数据框并添加标签列
data_t <- as.data.frame(data_t)
data_t$label <- labels
head(data_t)
data_t$Sample <- rownames(data_t)
library(ggplot2)
library(reshape2)
long_data <- melt(data_t, id.vars = c("Sample", "label"))
colnames(long_data) <- c("Sample", "Condition", "Gene", "Expression")
long_data$Condition <- factor(long_data$Condition, labels = c("Normal", "Disease"))
setwd("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/bulk/DEG+enrichment/")
pdf("TRDEGs_exp.pdf",width = 12,height = 6)
ggplot(long_data, aes(x = Condition, y = Expression, fill = Condition)) +
  geom_boxplot() +
  facet_wrap(~ Gene, scales = "free") +  # 每个基因一个单独的图
  theme_minimal() +  # 设置为简约主题
  labs(title = "Gene Expression in Normal vs Disease Samples",
       x = "Condition", y = "Expression Level") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +  # 调整x轴标签角度
  scale_fill_manual(values = c("Normal" = "lightblue", "Disease" = "lightcoral"))  # 自定义颜色
dev.off()
