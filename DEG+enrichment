###DEGs（limma）###
#查看数据一致性
setwd("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment")
exp <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/preprocessing/exp_symbol_avg.csv",row.names = 1)
pdf(file = "01.pdf", width = 6, height = 6)
boxplot(data.frame(exp))
dev.off()
#一致性不好的话使用limma标准化处理
library(limma)
normalized_exp <- normalizeBetweenArrays(exp, method="quantile")
pdf(file = "02.pdf", width = 6, height = 6)
boxplot(data.frame(normalized_exp))
dev.off()
write.csv(normalized_exp,file="/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE43292/preprocessing/exp_norm.csv")
###limma差异分析###
library(limma)
exp <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/data/GSE43292/preprocessing/exp_norm.csv",row.names = 1)
# 提取样本名的最后一位数字
sample_names <- colnames(exp)
last_digit <- as.numeric(sub(".*([0-9])$", "\\1", sample_names))
# 创建分组向量：奇数为 normal 组，偶数为 case 组
group <- ifelse(last_digit %% 2 == 1, "normal", "case")
# 创建设计矩阵
design <- model.matrix(~0 + factor(group))
colnames(design) <- c("normal", "case")  # 显式命名组
print(head(design))
# 创建对比矩阵
contrast_matrix <- makeContrasts(
  case_vs_normal = case - normal,
  levels = design
)
print(contrast_matrix)
# 拟合线性模型
fit <- lmFit(exp, design)
# 应用对比
fit2 <- contrasts.fit(fit, contrast_matrix)
# 使用经验贝叶斯方法来计算显著性
fit2 <- eBayes(fit2)
result <- topTable(fit2,coef=1,n=Inf,adjust="BH")
head(result)
write.csv(result,"/mnt/raid5c/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/DEGs.csv")
library(dplyr)
log2FC_threshold <- 1
p_value_threshold <- 0.05
DEG <- result %>%
  filter(abs(logFC) > log2FC_threshold & P.Value < p_value_threshold)
dim(DEG)
write.csv(DEG,"/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/DEGs_filtered.csv")
###差异基因作图###
library(ggplot2)
library(dplyr)
library(ggrepel)
DEG <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/DEGs_filtered.csv")
# 添加表达状态的列
DEG <- DEG %>%
  mutate(regulation = case_when(
    logFC >= 1 & adj.P.Val < 0.05 ~ "up",    
    logFC <= -1 & adj.P.Val < 0.05 ~ "down", 
    TRUE ~ "no_change"
  ))
pdf(file = "03.pdf", width = 6, height = 6)
# 绘制火山图并添加基因名标签
ggplot(DEG, aes(x = logFC, y = -log10(adj.P.Val), color = regulation)) +
  geom_point(alpha = 0.8, size = 2) +
  scale_color_manual(values = c("up" = "red", "down" = "blue", "no_change" = "gray")) +
  theme_minimal() +
  labs(title = "Volcano Plot", x = "log2 Fold Change", y = "-log10 Adjusted P-Value") +
  theme(legend.title = element_blank()) +
  geom_hline(yintercept = -log10(0.05), linetype = "dashed", color = "black") +
  geom_vline(xintercept = c(-1, 1), linetype = "dashed", color = "black") +
  
  # 添加基因名标签，仅对 up 和 down 的基因进行标注
  geom_text_repel(
    data = DEG %>% filter(abs(logFC) > 1 & adj.P.Val < 0.05),  # 仅标注显著的基因
    aes(label = rownames(DEG)),  # 假设 DEG 中的基因名在行名中
    size = 3,
    box.padding = unit(0.35, "lines"),
    point.padding = unit(0.3, "lines")
  )
dev.off()
###GO+KEGG enrichment###
library(clusterProfiler)
library(org.Hs.eg.db)#将Symbol转换为基因符号Entrez ID
library(dplyr)
library(DOSE)
library(ggplot2)
library(GEOquery)#R包加载
library(tidyr)
d <- read.csv("EPC_case_control_diff_genes.csv",row.names = 1)
diff_entrez<-bitr(rownames(d),fromType = 'SYMBOL',toType = 'ENTREZID',OrgDb = 'org.Hs.eg.db')
head(diff_entrez)
#KEGG enrich
KEGG_enrich <- clusterProfiler::enrichKEGG(gene = diff_entrez$ENTREZID,
                                           organism = "hsa", #物种Homo sapiens 
                                           pvalueCutoff = 0.05,#pvalue阈值
                                           qvalueCutoff = 0.05,#qvalue阈值
                                           pAdjustMethod = "BH",#p值矫正方法，one of "holm", 
                                           #"hochberg", "hommel", 
                                           #"bonferroni", "BH", 
                                           #"BY", "fdr", "none"
                                           minGSSize = 10,#富集分析中考虑的最小基因集合大小
                                           maxGSSize = 500)#富集中考虑的最大基因集合大小
#将RNTREZ转换为Symbol
KEGG_enrich<-setReadable(KEGG_enrich,
                         OrgDb = org.Hs.eg.db,
                         keyType = 'ENTREZID')
#提取KEGG富集结果表格                 
KEGG_result<-KEGG_enrich@result
KEGG_result
KEGG_result <- KEGG_result[which(KEGG_result$pvalue<0.05&KEGG_result$qvalue<0.05),]
write.csv(KEGG_result,"KEGG_result.csv")
#GO enrich
go_enrich<-clusterProfiler::enrichGO(gene = diff_entrez$ENTREZID,
                                     ont = 'all',#可选'BP','CC','MF' or 'all'
                                     keyType = "ENTREZID",
                                     OrgDb = org.Hs.eg.db,
                                     pAdjustMethod = "BH",#p值矫正方法
                                     pvalueCutoff = 0.05,
                                     qvalueCutoff = 0.05)
#将RNTREZ转换为Symbol
go_enrich<-DOSE::setReadable(go_enrich,
                             OrgDb = org.Hs.eg.db,
                             keyType = 'ENTREZID')
#去除冗余的GO term
go_geo<- simplify(go_enrich, cutoff=0.7, by="p.adjust",
                  select_fun=min)
#提取GO富集结果表格 
go_result<-go_geo@result
go_result
write.csv(go_result,"G0_result.csv")
###enrich结果绘图###
#GO结果作图
library(forcats)
library(ggplot2)
ggplot(go_result,aes(x=GeneRatio,y=fct_reorder(Description, GeneRatio)))+#将term顺序按照GeneRatio进行排序
  #分面
  geom_point(aes(size=Count,fill=p.adjust),
             shape=21,
             color='black')+
  facet_grid(ONTOLOGY~.,
             scale='free_y',
             space = 'free_y'
  )+
  #修改气泡图颜色
  scale_fill_gradient(low='#E27371',high = '#5D82A7')+
  #标题修改
  labs(title='GO Enrichment',
       y='GO term',
       x='GeneRatio')+
  guides(fill=guide_colorbar(reverse = T,order=1))+
  theme_bw()#主题
#KEGG作图
ggplot(KEGG_result,aes(x=GeneRatio,y=fct_reorder(Description, GeneRatio)))+#将term顺序按照GeneRatio进行排序
  #分面
  geom_point(aes(size=Count,fill=p.adjust),
             shape=21,
             color='black')+
  #修改气泡图颜色
  scale_fill_gradient(low='#E27371',high = '#5D82A7')+
  #标题修改
  labs(title='KEGG Enrichment',
       y='KEGG term',
       x='GeneRatio')+
  guides(fill=guide_colorbar(reverse = T,order=1))+
  theme_bw()#主题
###绘制venn图###
cd /mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment
library (VennDiagram)
set1 <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/DEGs_filtered.csv")
set2 <- read.csv("/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/signature_gene_set.csv")
set1 <- set1$X
set2 <- set2$Gene
intersection <- intersect(set1, set2)
print(intersection)
write.csv(intersection, file = "/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/intersection_genes.csv")
#二元#
venn.diagram(x=list(set1,set2), 
             scaled = F, # 根据比例显示大小
             alpha= 0.5, #透明度 
             lwd=1,lty=1,col=c('#FFFFCC','#CCFFFF'), #圆圈线条粗细、形状、颜色；1 实线, 2 虚线, blank无线条 
             label.col ='black' , # 数字颜色abel.col=c('#FFFFCC','#CCFFFF',......)根据不同颜色显示数值颜色 
             cex = 2, # 数字大小 
             fontface = "bold",  # 字体粗细；加粗bold 
             fill=c('#FFFFCC','#CCFFFF'), # 填充色 配色https://www.58pic.com/ 
             category.names = c("Set1", "Set2") , #标签名 
             cat.dist = 0.02, # 标签距离圆圈的远近 
             cat.pos = -180, # 标签相对于圆圈的角度cat.pos = c(-10, 10, 135) 
             cat.cex = 2, #标签字体大小 
             cat.fontface = "bold",  # 标签字体加粗
             cat.col='black' ,   #cat.col=c('#FFFFCC','#CCFFFF',.....)根据相应颜色改变标签颜色
             cat.default.pos = "outer",  # 标签位置, outer内;text 外 
             output=TRUE, 
             filename='/mnt/raid5/User/bailin/project/240909Carotid.plaque/result/DEG+enrichment/venn.png',# 文件保存 
             imagetype="png",  # 类型（tiff png svg）
             resolution = 400,  # 分辨率 
             compression = "lzw"# 压缩算法
             )
